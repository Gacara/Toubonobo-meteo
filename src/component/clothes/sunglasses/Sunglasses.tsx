/*
auto-generated by: https://github.com/pmndrs/gltfjsx
author: alvawong (https://sketchfab.com/alvawong06)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/sunglasses-free-deeb41e3f5f1480bb6f79f474c9f7ef5
title: Sunglasses_Free
*/
import React, { useRef } from 'react'
import { useLoader } from '@react-three/fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { getRandomColor } from '../../dayCamp';

type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial: THREE.Mesh
  }
  materials: {
    Material__385: THREE.MeshStandardMaterial
  }
}

export default function Sunglasses(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const gltf = useLoader(GLTFLoader, "/sunglasses/sunglasses.glb");
  const { nodes, materials } = gltf as GLTFResult
  return (
    <group ref={group} {...props} scale={[0.2,0.2,0.2]} onClick={(e) => {e.stopPropagation(); getRandomColor(materials.Material__385 as THREE.MeshStandardMaterial)}} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh material={materials.Material__385} geometry={nodes.defaultMaterial.geometry} />
        </group>
      </group>
    </group>
  )
}