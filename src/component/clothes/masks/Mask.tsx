/*
auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useRef } from 'react'
import { useLoader } from '@react-three/fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { getRandomColor } from '../../dayCamp';

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
    mesh_1: THREE.Mesh
    mesh_2: THREE.Mesh
    mesh_4: THREE.Mesh
    mesh_5: THREE.Mesh
    mesh_3: THREE.Mesh
    mesh_6: THREE.Mesh
    mesh_7: THREE.Mesh
  }
  materials: {
    MASK2_FABRIC_9_FRONT_4874: THREE.MeshStandardMaterial
  }
}

export default function Mask(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>();
  const gltf = useLoader(GLTFLoader, "/masks/mask.glb");
  const { nodes, materials } = gltf as GLTFResult;

  return (
    <group ref={group} {...props} scale={[0.020,0.023,0.023]} onClick={(e) => {getRandomColor(nodes.mesh_7.material as THREE.MeshStandardMaterial)}} dispose={null}>
      <mesh
        material={nodes.mesh_0.material}
        geometry={nodes.mesh_0.geometry}
        position={[-21.05, -165.24, 0.7]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[39.37, 39.37, 39.37]}
      />
      <mesh
        material={nodes.mesh_1.material}
        geometry={nodes.mesh_1.geometry}
        position={[-21.05, -165.24, 0.7]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[39.37, 39.37, 39.37]}
      />
      <mesh
        material={nodes.mesh_2.material}
        geometry={nodes.mesh_2.geometry}
        position={[-21.05, -165.24, 0.7]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[39.37, 39.37, 39.37]}
      />
      <mesh
        material={materials.MASK2_FABRIC_9_FRONT_4874}
        geometry={nodes.mesh_4.geometry}
        position={[-21.05, -165.24, 0.7]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[39.37, 39.37, 39.37]}
      />
      <mesh
        material={materials.MASK2_FABRIC_9_FRONT_4874}
        geometry={nodes.mesh_5.geometry}
        position={[-21.05, -165.24, 0.7]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[39.37, 39.37, 39.37]}
      />
      <mesh
        material={nodes.mesh_3.material}
        geometry={nodes.mesh_3.geometry}
        position={[-21.05, -165.24, 0.7]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[39.37, 39.37, 39.37]}
      />
      <mesh
        material={nodes.mesh_6.material}
        geometry={nodes.mesh_6.geometry}
        position={[-21.05, -165.24, 0.7]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[39.37, 39.37, 39.37]}
      />
      <mesh
        material={nodes.mesh_7.material}
        geometry={nodes.mesh_7.geometry}
        position={[-21.05, -165.24, 0.7]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[39.37, 39.37, 39.37]}
      />
    </group>
  )
}